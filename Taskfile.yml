---
version: '3'

env:
  UID:
    sh: id -u
  GID:
    sh: id -g
  RDMO_DOCKERFILE:
    sh: stoml "$(pwd)/config.toml" rdmo_dockerfile
  RDMO_CONTAINER_NAME: rdmo
  LOCAL_RDMO:
    sh: stoml "$(pwd)/config.toml" folders.rdmo_source | envsubst

vars:
  CURDIR:
    sh: pwd
  CONFIG:
    sh: echo "$(pwd)/config.toml"
  DC_TEMP:
    sh: echo "$(pwd)/docker-compose.yaml"
  TEMPFILE: /tmp/rdmo-dev.tmp
  REPO_RDMO:
    sh: stoml "$(pwd)/config.toml" repos.rdmo | envsubst

tasks:
  default:
    desc: default rdmo dockers build, from github master
    cmds:
      - task: prep
      - task: build
      - task: log

  test:
    desc: test local rdmo source
    cmds:
      - cmd: ./sh/prepare/render_yaml.sh "{{.DC_TEMP}}" "{{.CONFIG}}"
      - cmd: >-
          ./sh/prepare/render_variables_env.sh . . test
      - task: build
      - task: log

  testremote:
    desc: test remote rdmo source
    cmds:
      - cmd: ./sh/prepare/render_yaml.sh {{.DC_TEMP}} {{.CONFIG}}
      - cmd: >-
          ./sh/prepare/render_variables_env.sh "{{.REPO_RDMO}}"
          master test
      - task: build
      - task: log

  prep:
    desc: run preparing operations
    cmds:
      - cmd: ./sh/prepare/render_yaml.sh {{.DC_TEMP}} {{.CONFIG}}
      - cmd: ./sh/prepare/render_variables_env.sh .

  build:
    cmds:
      - cmd: docker-compose up --build -d

  remove:
    desc: remove rdmo's dockers
    cmds:
      - cmd: docker-compose down --rmi all
      - cmd: docker-compose rm --force

  log:
    desc: tail logs
    cmds:
      - cmd: docker logs -f rdmo 2>&1 | grep -Ev '"GET / HTTP/1.1"
          200'

  wait_for_up:
    desc: wait for rdmo to be up and running
    cmds:
      - cmd: |
          function wait_for_up(){
              echo "[$(date +%H:%M:%S)] Wait for RDMO to be up..."
              if [[ -z "$(curl -sI "http://localhost:8280"  | head -n 1 | grep "200")" ]]; then
                  sleep 2
                  wait_for_up
              fi
              echo "[$(date +%H:%M:%S)] RDMO is up and running"
          }
          wait_for_up

  locale:
    desc: poedit open rdmo localizations
    cmds:
      - cmd: sh/localize.sh

  mr:
    desc: make an rdmo release
    dir: docker/make-release
    cmds:
      - cmd: docker build --build-arg UID={{.UID}} --build-arg
          GID={{.GID}} --tag rdmo-make-release .
      - cmd: docker run --rm -d -v {{.LOCAL_RDMO}}:/home/usr/rdmo
          --name rdmo-make-release rdmo-make-release
      - cmd: docker logs -f rdmo-make-release

  upload_release:
    desc: upload release to pypi
    cmds:
      - cmd: |
          distfol="{{.LOCAL_RDMO}}/dist"
          if [[ -d "${distfol}" ]]; then
            twine upload -r rdmo ${distfol}/*
          fi
